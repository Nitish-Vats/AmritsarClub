@model AmritsarClub.Models.SaleOrderSearchClass
@{
    ViewBag.Title = "Order_Status";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link href="~/Content/Login_css/Order_status_CSS.css" rel="stylesheet" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
<link href="~/Content/Datatable_css_Js/jquery.dataTables.min.css" rel="stylesheet" />
<script src="~/jquery-3.7.1.js"></script>
<script src="~/Content/Datatable_css_Js/jquery.dataTables.min.js"></script>
<link href="~/Content/Datatable_css_Js/jquery-ui.css" rel="stylesheet" />
<script src="~/Content/Datatable_css_Js/jquery-ui.js"></script>
<script src="~/Content/Datatable_css_Js/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#datewisesearch1').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: false,
            maxDate: 0,
            yearRange: 'c-100:c+10',
        });
        $('#datewisesearch2').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: false,
            minDate: 0,
            yearRange: 'c-100:c+10',
        });
        displayPartyName();
        getImagePreviews();
        SectionsList();
        SectionPartyWiseSearch();
        SectionItemPartyWiseSearch();
        $("#ddl_SectionName").change(function () {
            var selectedValue = $(this).val();
            var itemsDropdown = $("#ddl_ItemName");
            $.ajax({
                url: '/OrderStatus/GetItemList',
                type: 'POST',
                data: JSON.stringify({ Section: selectedValue }),
                contentType: 'application/json',
                success: function (response) {
                    itemsDropdown.empty().append($('<option>', { value: '', text: 'Select Item' }));

                    $.each(response, function (index, item) {
                        itemsDropdown.append($('<option>', { value: item.gen_code, text: item.cor_gen_name }));
                    });
                },
                error: function () {
                    alert("Error occurred while fetching items.");
                }
            });
        });
        GroupWiseSearchByParty();
        WorkOrderWiseSearchByParty();
        BatchNorWiseSearchByParty();
        CombiCodeWiseSearchByParty();
        Datewise_Search();
        SectionItemPartyDateWiseSearch();
        clearAllInputs();
    });

    function clearAllInputs() {
        $('#findGroupOrder').val('');
        $('input[type="text"]').val('');
        $('input[type="date"]').val('');
        $('textarea').val('');
        $('#ddl_SectionName').val('');
        $('#ddl_ItemName').val('');
        $('.picture-box').empty();
        $('input[type="checkbox"]').prop('checked', false);
        $('#myTable').DataTable().clear().destroy();
        $('#DesignerParty').DataTable().clear().destroy();
        $('#RowMaterialStatus').DataTable().clear().destroy();
        $('#PackingMaterialStatus').DataTable().clear().destroy();
        $('#producSt').DataTable().clear().destroy();
        $('#PackingStatus').DataTable().clear().destroy();
        $('#TestParty').DataTable().clear().destroy();
        $('#InvoiceStatusId').DataTable().clear().destroy();
        $('#PaymentStatusID').DataTable().clear().destroy();
    }

    function displayPartyName() {
        try {
            var Username = "SampleUser";
            var PasswordHash = "SamplePasswordHash";
            var base64Credentials = btoa(Username + ":" + PasswordHash);
            $.ajax({
                url: '/OrderStatus/DisplayPartyName',
                type: 'POST',
                dataType: "Json",
                contentType: 'application/json',
                success: function (response) {
                    console.log("successful", response);
                    var firstObject = response[0];
                    var partyName = firstObject.PartyName;
                    $('#ddl_PartyName').text(partyName);
                },
                error: function (error) {
                    console.error('Error fetching party name:', error);
                }
            });
        } catch (e) {
            console.error('An error occurred:', e);
        }
    }

    function SectionsList() {
        $.ajax({
            url: '/OrderStatus/GetSectionList',
            type: 'POST',
            contentType: 'application/json',
            success: function (response) {
                var ddl_SectionName = $('#ddl_SectionName');
                ddl_SectionName.empty().append($('<option>', { value: '', text: 'Select' }));
                $.each(response, function (index, item) {
                    ddl_SectionName.append($('<option>', {
                        value: item.dsg_code,
                        text: item.dsg_form
                    }));
                });
            },
            error: function (xhr, textStatus, errorThrown) {
                if (errorThrown === 'net::ERR_CERT_AUTHORITY_INVALID') {
                    console.log('SSL certificate authority invalid.');
                } else {
                    console.log('Other error: ' + errorThrown);
                }
            }
        });
    }

    function SectionPartyWiseSearch() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var table;
        function sectionSearch() {
            //var userId = sessionStorage.getItem('userID');
            var Dsgform = $("#ddl_SectionName").find('option:selected').text();
            if (table && $.fn.DataTable.isDataTable('#myTable')) {
                table.destroy();
            }
            $.ajax({
                url: '/OrderStatus/GetBySectionParty',
                type: 'POST',
                data: JSON.stringify({ dsgform: Dsgform }),
                contentType: 'application/json',
                success: function (response) {
                    if (response && response.length > 0) {
                        table = $('#myTable').DataTable({
                            data: response,
                            columns: [
                                { data: null, defaultContent: '<input type="checkbox" class="row-checkbox">' },
                                { data: 'WorkOrderNo' },
                                { data: 'OrderDate' },
                                { data: 'NoOfDays' },
                                { data: 'party_name' },
                                { data: 'DrugDossageForm' },
                                { data: 'CorGenName' },
                                { data: 'ItemStatus' },
                                { data: 'ManufacturingStatus' },
                                { data: 'GroupOrder' }
                            ],
                            select: {
                                style: 'single'
                            },
                            "columnDefs": [
                                {
                                    "targets": 0,
                                    "orderable": false
                                }
                            ],
                            "paging": true,
                            "searching": true,
                            "pageLength": 5,
                            "lengthMenu": [5, 10, 20, 25]
                        });

                        $(document).on("change", "#myTable input[type='checkbox']", function () {
                            var $checkbox = $(this);
                            var $row = $checkbox.closest('tr');
                            var rowData = table.row($row).data();

                            $("#myTable input[type='checkbox']").not($checkbox).prop('checked', false);

                            if ($checkbox.prop('checked') && rowData) {
                                var workOrderNo = rowData.WorkOrderNo;
                                var corrGenName = rowData.CorrGenName;

                                sessionStorage.setItem('workOrderNo', workOrderNo);
                                sessionStorage.setItem('corrGenName', corrGenName);

                                //Designer();
                                RowMaterial();
                                PackingMaterial();
                                Production();
                                Packing();
                                //Testing();
                                Invoice();
                                Payment();
                            }
                        });
                    }
                    else {
                    }
                },
                error: function (error) {
                    console.log("Error: " + error);
                }
            });
        }

        $("#submitButton").on("click", function () {
            sectionSearch();
        });
        $("#ddl_SectionName").on("keypress", function (event) {
            if (event.which === 13) {
                sectionSearch();
            }
        });

    }

    function SectionItemPartyWiseSearch() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var table;
        function sectionItemSearch() {
            var Dsgform = $("#ddl_SectionName").find('option:selected').text();
            var CoreGen = $("#ddl_ItemName").find('option:selected').text();

            if (table && $.fn.DataTable.isDataTable('#myTable')) {
                table.destroy();
            }
            $.ajax({
                url: '/OrderStatus/GetBySectionItemParty',
                type: 'POST',
                data: JSON.stringify({
                    corrgrn: CoreGen,
                    dsgform: Dsgform
                }),
                contentType: 'application/json',
                success: function (response) {
                    if (response && response.length > 0) {
                        table = $('#myTable').DataTable({
                            data: response,
                            columns: [
                                { data: null, defaultContent: '<input type="checkbox" class="row-checkbox">' },
                                { data: 'WorkOrderNo' },
                                { data: 'OrderDate' },
                                { data: 'NoOfDays' },
                                { data: 'PartyName' },
                                { data: 'DrugDossageForm' },
                                { data: 'CorrGenName' },
                                { data: 'ItemStatus' },
                                { data: 'ManufacturingStatus' },
                                { data: 'GroupOrder' }
                            ],
                            select: {
                                style: 'single'
                            },
                            "columnDefs": [
                                {
                                    "targets": 0,
                                    "orderable": false
                                }
                            ],
                            "paging": true,
                            "searching": true,
                            "pageLength": 5,
                            "lengthMenu": [5, 10, 20, 25]
                        });
                        $('#myTable tbody').on('mouseenter', 'tr', function () {
                            $(this).addClass('hover');
                        }).on('mouseleave', 'tr', function () {
                            $(this).removeClass('hover');
                        });

                        $(document).on("change", "#myTable input[type='checkbox']", function () {
                            var $checkbox = $(this);
                            var $row = $checkbox.closest('tr');
                            var rowData = table.row($row).data();

                            $("#myTable input[type='checkbox']").not($checkbox).prop('checked', false);

                            if ($checkbox.prop('checked') && rowData) {
                                var workOrderNo = rowData.WorkOrderNo;
                                var corrGenName = rowData.CorrGenName;
                                sessionStorage.setItem('workOrderNo', workOrderNo);
                                sessionStorage.setItem('corrGenName', corrGenName);
                                //Designer();
                                RowMaterial();
                                PackingMaterial();
                                Production();
                                Packing();
                                //Testing();
                                Invoice();
                                Payment();
                            }
                        });
                    }
                    else {
                    }
                },
                error: function (error) {
                    console.log("Error: " + error);
                }
            });
        }
        $("#submitButton").on("click", function () {
            sectionItemSearch();
        });
        $("#ddl_SectionName,#ddl_ItemName").on("keypress", function (event) {
            if (event.which === 13) {
                sectionItemSearch();
            }
        });
    }

    function Datewise_Search() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var table;
        if (table && $.fn.DataTable.isDataTable('#myTable')) {
            table.destroy();
        }
        $("#submitButton").on("click", function () {
            var fromdate = $("#datewisesearch1").val();
            var todate = $("#datewisesearch2").val();
            $.ajax({
                url: '/OrderStatus/GetByDateWiseSearch',
                type: 'POST',
                data: JSON.stringify({
                    FromDate: fromdate,
                    ToDate: todate
                }),
                contentType: 'application/json',
                success: function (response) {
                    if (response && response.length > 0) {
                        table = $('#myTable').DataTable({
                            data: response,
                            columns: [
                                { data: null, defaultContent: '<input type="checkbox" class="row-checkbox">' },
                                { data: 'WorkOrderNo' },
                                { data: 'OrderDate' },
                                { data: 'NoOfDays' },
                                { data: 'PartyName' },
                                { data: 'DrugDossageForm' },
                                { data: 'CorrGenName' },
                                { data: 'ItemStatus' },
                                { data: 'ManufacturingStatus' },
                                { data: 'GroupOrder' }
                            ],
                            select: {
                                style: 'single'
                            },
                            "columnDefs": [
                                {
                                    "targets": 0,
                                    "orderable": false
                                }
                            ],
                            "paging": true,
                            "searching": true,
                            "pageLength": 5,
                            "lengthMenu": [5, 10, 20, 25]
                        });

                        $(document).on("change", "#myTable input[type='checkbox']", function () {
                            var $checkbox = $(this);
                            var $row = $checkbox.closest('tr');
                            var rowData = table.row($row).data();

                            $("#myTable input[type='checkbox']").not($checkbox).prop('checked', false);

                            if ($checkbox.prop('checked') && rowData) {
                                var workOrderNo = rowData.WorkOrderNo;
                                var corrGenName = rowData.CorrGenName;

                                sessionStorage.setItem('workOrderNo', workOrderNo);
                                sessionStorage.setItem('corrGenName', corrGenName);

                                //Designer();
                                RowMaterial();
                                PackingMaterial();
                                Production();
                                Packing();
                                //Testing();
                                Invoice();
                                Payment();
                            }
                        });
                    }
                    else {
                    }
                },
                error: function (error) {
                    console.log("Error: " + error);
                }
            });
        });
    }

    function GroupWiseSearchByParty() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var table;
        function GroupOrdersearch() {
            var groupOrder = $("#findGroupOrder").val();

            if (table && $.fn.DataTable.isDataTable('#myTable')) {
                table.destroy();
            }
            $.ajax({
                url: '/OrderStatus/GetByGO',
                type: "POST",
                data: JSON.stringify({ GroupOrder: groupOrder }),
                dataType: "Json",
                contentType: 'application/json',
                success: function (response) {

                    if (response && response.length > 0) {
                        table = $('#myTable').DataTable({
                            data: response,
                            columns: [
                                { data: null, defaultContent: '<input type="checkbox" class="row-checkbox">' },
                                { data: 'WorkOrderNo' },
                                { data: 'OrderDate' },
                                { data: 'NoOfDays' },
                                { data: 'PartyName' },
                                { data: 'DrugDossageForm' },
                                { data: 'CorrGenName' },
                                { data: 'ItemStatus' },
                                { data: 'ManufacturingStatus' },
                                { data: 'GroupOrder' }
                            ],
                            select: {
                                style: 'single'
                            },
                            "columnDefs": [
                                {
                                    "targets": 0,
                                    "orderable": false
                                }
                            ],
                            "paging": true,
                            "searching": true,
                            "pageLength": 5,
                            "lengthMenu": [5, 10, 20, 25]
                        });

                        $(document).on("change", "#myTable input[type='checkbox']", function () {
                            var $checkbox = $(this);
                            var $row = $checkbox.closest('tr');
                            var rowData = table.row($row).data();

                            $("#myTable input[type='checkbox']").not($checkbox).prop('checked', false);

                            if ($checkbox.prop('checked') && rowData) {
                                var workOrderNo = rowData.WorkOrderNo;
                                var corrGenName = rowData.CorrGenName;

                                sessionStorage.setItem('workOrderNo', workOrderNo);
                                sessionStorage.setItem('corrGenName', corrGenName);

                                //Designer();
                                RowMaterial();
                                PackingMaterial();
                                Production();
                                Packing();
                                //Testing();
                                Invoice();
                                Payment();
                            }
                        });
                    }
                    else {
                        //Swal.fire({
                        //    icon: 'error',
                        //    title: 'Group Order Mismatch',
                        //    text: 'This Group Order does not belong to the party.',
                        //});
                    }
                },
                error: function (error) {
                    console.log("Error: " + error);
                }
            });
        }
        $("#submitButton").on("click", function () {
            GroupOrdersearch();
        });
        $("#findGroupOrder").on("keypress", function (event) {
            if (event.which === 13) {
                GroupOrdersearch();
            }
        });
    }

    function WorkOrderWiseSearchByParty() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var table;

        function WorkOrderSearch() {
            //var userId = sessionStorage.getItem('userID');
            var workOrder = $("#findWorkOrder").val();
            if (table && $.fn.DataTable.isDataTable('#myTable')) {
                table.destroy();
            }

            $.ajax({
                url: '/OrderStatus/GetByWO',
                type: 'POST',
                data: JSON.stringify({ WorkOrder: workOrder }),
                dataType: "Json",
                contentType: 'application/json',
                success: function (response) {
                    if (response && response.length > 0) {

                        table = $('#myTable').DataTable({
                            data: response,
                            columns: [
                                { data: null, defaultContent: '<input type="checkbox" class="row-checkbox">' },
                                { data: 'WorkOrderNo' },
                                { data: 'OrderDate' },
                                { data: 'NoOfDays' },
                                { data: 'PartyName' },
                                { data: 'DrugDossageForm' },
                                { data: 'CorrGenName' },
                                { data: 'ItemStatus' },
                                { data: 'ManufacturingStatus' },
                                { data: 'GroupOrder' }
                            ],
                            select: {
                                style: 'single'
                            },
                            "columnDefs": [
                                {
                                    "targets": 0,
                                    "orderable": false
                                }
                            ],
                            "paging": true,
                            "searching": true,
                            "pageLength": 5,
                            "lengthMenu": [5, 10, 20, 25]
                        });
                        $(document).on("change", "#myTable input[type='checkbox']", function () {
                            var $checkbox = $(this);
                            var $row = $checkbox.closest('tr');
                            var rowData = table.row($row).data();

                            $("#myTable input[type='checkbox']").not($checkbox).prop('checked', false);

                            if ($checkbox.prop('checked') && rowData) {
                                var workOrderNo = rowData.WorkOrderNo;
                                var corrGenName = rowData.CorrGenName;

                                sessionStorage.setItem('workOrderNo', workOrderNo);
                                sessionStorage.setItem('corrGenName', corrGenName);
                                //Designer();
                                RowMaterial();
                                PackingMaterial();
                                Production();
                                Packing();
                                //Testing();
                                Invoice();
                                Payment();
                            }
                        });
                    }
                    else {
                        //Swal.fire({
                        //    icon: 'error',
                        //    title: 'Work Order Mismatch',
                        //    text: 'This work order does not belong to the party.',
                        //});
                    }
                },
                error: function (error) {
                    console.log("Error: " + error);
                }
            });
        }
        $("#submitButton").on("click", function () {
            //$.ajaxSetup({ cache: false });
            WorkOrderSearch();
        });
        $("#findWorkOrder").on("keypress", function (event) {
            //$.ajaxSetup({ cache: false });
            if (event.which === 13) {
                WorkOrderSearch();
            }
        });
    }

    function BatchNorWiseSearchByParty() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var table;

        function BatchNoSearch() {
            var Batch = $("#findBatchNo").val();

            if (table && $.fn.DataTable.isDataTable('#myTable')) {
                table.destroy();
            }
            $.ajax({
                url: '/OrderStatus/GetByBatch',
                type: 'POST',
                data: JSON.stringify({ batch: Batch }),
                contentType: 'application/json',
                success: function (response) {
                    if (response && response.length > 0) {
                        table = $('#myTable').DataTable({
                            data: response,
                            columns: [
                                { data: null, defaultContent: '<input type="checkbox" class="row-checkbox">' },
                                { data: 'WorkOrderNo' },
                                { data: 'OrderDate' },
                                { data: 'NoOfDays' },
                                { data: 'PartyName' },
                                { data: 'DrugDossageForm' },
                                { data: 'CorrGenName' },
                                { data: 'ItemStatus' },
                                { data: 'ManufacturingStatus' },
                                { data: 'GroupOrder' }
                            ],
                            select: {
                                style: 'single'
                            },
                            "columnDefs": [
                                {
                                    "targets": 0,
                                    "orderable": false
                                }
                            ],
                            "paging": true,
                            "searching": true,
                            "pageLength": 5,
                            "lengthMenu": [5, 10, 20, 25]
                        });
                        $(document).on("change", "#myTable input[type='checkbox']", function () {
                            var $checkbox = $(this);
                            var $row = $checkbox.closest('tr');
                            var rowData = table.row($row).data();

                            $("#myTable input[type='checkbox']").not($checkbox).prop('checked', false);

                            if ($checkbox.prop('checked') && rowData) {
                                var workOrderNo = rowData.WorkOrderNo;
                                var corrGenName = rowData.CorrGenName;

                                sessionStorage.setItem('workOrderNo', workOrderNo);
                                sessionStorage.setItem('corrGenName', corrGenName);

                                //Designer();
                                RowMaterial();
                                PackingMaterial();
                                Production();
                                Packing();
                                //Testing();
                                Invoice();
                                Payment();
                            }
                        });

                    } else {
                        //Swal.fire({
                        //    icon: 'error',
                        //    title: 'Batch Number Mismatch',
                        //    text: 'This Batch Number does not belong to the party.',
                        //});
                    }
                },
                error: function (error) {
                    console.log("Error: " + error);
                }
            });
        }

        $("#submitButton").on("click", function () {
            BatchNoSearch();
        });

        $("#findBatchNo").on("keypress", function (event) {
            if (event.which === 13) {
                BatchNoSearch();
            }
        });
    }

    function CombiCodeWiseSearchByParty() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var table;
        function CombiCodeSearch() {
            var CombiCode = $("#combiCode").val();
            if (table && $.fn.DataTable.isDataTable('#myTable')) {
                table.destroy();
            }
            $.ajax({
                url: '/OrderStatus/GetByCombi',
                type: 'POST',
                data: JSON.stringify({ combi: CombiCode }),
                contentType: 'application/json',
                success: function (response) {
                    if (response && response.length > 0) {
                        table = $('#myTable').DataTable({
                            data: response,
                            columns: [
                                { data: null, defaultContent: '<input type="checkbox" class="row-checkbox">' },
                                { data: 'WorkOrderNo' },
                                { data: 'OrderDate' },
                                { data: 'NoOfDays' },
                                { data: 'PartyName' },
                                { data: 'DrugDossageForm' },
                                { data: 'CorrGenName' },
                                { data: 'ItemStatus' },
                                { data: 'ManufacturingStatus' },
                                { data: 'GroupOrder' }
                            ],
                            select: {
                                style: 'single'
                            },
                            "columnDefs": [
                                {
                                    "targets": 0,
                                    "orderable": false
                                }
                            ],
                            "paging": true,
                            "searching": true,
                            "pageLength": 5,
                            "lengthMenu": [5, 10, 20, 25]
                        });
                        $(document).on("change", "#myTable input[type='checkbox']", function () {
                            var $checkbox = $(this);
                            var $row = $checkbox.closest('tr');
                            var rowData = table.row($row).data();
                            $("#myTable input[type='checkbox']").not($checkbox).prop('checked', false);
                            if ($checkbox.prop('checked') && rowData) {
                                var workOrderNo = rowData.WorkOrderNo;
                                var corrGenName = rowData.CorrGenName;
                                sessionStorage.setItem('workOrderNo', workOrderNo);
                                sessionStorage.setItem('corrGenName', corrGenName);
                                //Designer();
                                RowMaterial();
                                PackingMaterial();
                                Production();
                                Packing();
                                //Testing();
                                Invoice();
                                Payment();
                            }
                        });
                    }
                    else {
                        //Swal.fire({
                        //    icon: 'error',
                        //    title: 'Combi Code Mismatch',
                        //    text: 'This Combi Code does not belong to the party.',
                        //});
                    }
                },
                error: function (error) {
                    console.log("Error: " + error);
                }
            });
        }
        $("#submitButton").on("click", function () {
            $.ajaxSetup({ cache: false });
            CombiCodeSearch();
        });
        $("#combiCode").on("keypress", function (event) {
            $.ajaxSetup({ cache: false });
            if (event.which === 13) {

                CombiCodeSearch();
            }
        });
    }

    function RowMaterial() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var workorder = sessionStorage.getItem('workOrderNo');
        var rowsPerPage = 5;
        var table = $('#RowMaterialStatus').DataTable();
        if ($.fn.DataTable.isDataTable('#RowMaterialStatus')) {
            table.clear().destroy();
        }
        $.ajax({
            url: '/OrderStatus/RMStatus',
            type: 'POST',
            data: JSON.stringify({ Work_order: workorder }),
            contentType: 'application/json',
            success: function (response) {

                if (response && response.length > 0) {
                    table = $('#RowMaterialStatus').DataTable({
                        data: response,
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: null },
                            { data: 'NoOfDays' },
                            { data: 'WorkOrderNo' },
                            { data: 'ItemName' },
                            { data: 'IngredentName' },
                            { data: 'DateOfBlocking' },
                            { data: 'StockAvailability' },
                            {
                                data: null, render: function (data, type, row) {
                                    if (row.NegativeQty >= 0) {
                                        return row.OrderStaDate;
                                    } else {
                                        return row.OrderStatusNO + ' ' + row.OrderStaDate + ' Order_Received';
                                    }
                                }
                            }
                        ],
                        "columnDefs": [
                            {
                                "targets": 1,
                                "render": function (data, type, row) {
                                    var statusColor;
                                    if (row.NegativeQty >= 0) {
                                        statusColor = 'darkgreen';
                                    } else {
                                        statusColor = 'darkred';
                                    }
                                    return '<div style="background-color: ' + statusColor + '; width: 20px; height: 20px;"></div>';
                                }
                            }
                        ],
                        "paging": true,
                        "searching": true,
                        "pageLength": rowsPerPage,
                        "lengthMenu": [5, 10, 20, 25],
                    });
                } else {
                    table = $('#RowMaterialStatus').DataTable({
                        data: [],
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: null },
                            { data: 'NoOfDays' },
                            { data: 'WorkOrderNo' },
                            { data: 'ItemName' },
                            { data: 'IngredentName' },
                            { data: 'DateOfBlocking' },
                            { data: 'StockAvailability' },
                            {
                                data: null, render: function (data, type, row) {
                                    if (row.NegativeQty >= 0) {
                                        return row.OrderStaDate;
                                    } else {
                                        return row.OrderStatusNO + ' ' + row.OrderStaDate + ' Order_Received';
                                    }
                                }
                            }
                        ]
                    });
                }
            },
            error: function (error) {
                console.log("Error: " + error);
            }
        });
    }

    function PackingMaterial() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var workorder = sessionStorage.getItem('workOrderNo');
        var rowsPerPage = 5;
        var table = $('#PackingMaterialStatus').DataTable();
        if ($.fn.DataTable.isDataTable('#PackingMaterialStatus')) {
            table.clear().destroy();
        }
        $.ajax({
            url: '/OrderStatus/PMStatus',
            type: 'POST',
            data: JSON.stringify({ PMWorkorder: workorder }),
            contentType: 'application/json',
            success: function (response) {
                if (response && response.length > 0) {
                    table = $('#PackingMaterialStatus').DataTable({
                        data: response,
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: null },
                            { data: 'NoOfDays' },
                            { data: 'WorkOrderNo' },
                            { data: 'ItemName' },
                            { data: 'ComponentName' },
                            { data: 'AccountHead' },
                            { data: 'StockAvailability' },
                            { data: 'PONo' }
                        ],
                        "columnDefs": [
                            {
                                "targets": 1,
                                "render": function (data, type, row) {
                                    var statusColor;
                                    if (row.NegativeQty >= 0.00) {
                                        statusColor = 'darkgreen';
                                    } else {
                                        statusColor = 'darkred';
                                    }
                                    return '<div style="background-color: ' + statusColor + '; width: 20px; height: 20px;"></div>';
                                }
                            }
                        ],
                        "paging": true,
                        "searching": true,
                        "pageLength": rowsPerPage,
                        "lengthMenu": [5, 10, 20, 25],
                    });
                } else {
                    table = $('#PackingMaterialStatus').DataTable({
                        data: [],
                        columns: []
                    });
                }
            },
            error: function (error) {
                console.log("Error: " + error);
            }
        });
    }

    function Production() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var workorder = sessionStorage.getItem('workOrderNo');
        var rowsPerPage = 5;
        var table = $('#producSt').DataTable();
        if ($.fn.DataTable.isDataTable('#producSt')) {
            table.clear().destroy();
        }
        $.ajax({
            url: '/OrderStatus/ProdStatus',
            type: 'POST',
            data: JSON.stringify({ ProdWorkorder: workorder }),
            contentType: 'application/json',
            success: function (response) {
                if (response && response.length > 0) {
                    table = $('#producSt').DataTable({
                        data: response,
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: null },
                            { data: 'NoOfDays' },
                            { data: 'ItemName' },
                            { data: 'BatchNo' },
                            { data: 'BatchSize' },
                            { data: 'OrderQuantity' },
                            { data: 'Unit' },
                            { data: 'ProStartDate' }
                        ],
                        "columnDefs": [
                            {
                                "targets": 1,
                                "render": function (data, type, row) {
                                    var statusColor;
                                    if (row.StatusGreen !== null) {
                                        statusColor = 'darkgreen';
                                    } else if (item.StatusYellow !== null) {
                                        statusColor = 'yellow';
                                    } else {
                                        statusColor = 'darkred';
                                    }
                                    return '<div style="background-color: ' + statusColor + '; width: 20px; height: 20px;"></div>';
                                }
                            }
                        ],
                        "paging": true,
                        "searching": true,
                        "pageLength": rowsPerPage,
                        "lengthMenu": [5, 10, 20, 25],
                    });
                }
                else {
                    table = $('#producSt').DataTable({
                        data: [],
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: null },
                            { data: 'NoOfDays' },
                            { data: 'ItemName' },
                            { data: 'BatchNo' },
                            { data: 'BatchSize' },
                            { data: 'OrderQuantity' },
                            { data: 'Unit' },
                            { data: 'ProStartDate' }
                        ]
                    });
                }
            },
            error: function (error) {
                console.log("Error: " + error);
            }
        });
    }

    function Packing() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var workorder = sessionStorage.getItem('workOrderNo');
        var rowsPerPage = 5;
        var table = $('#PackingStatus').DataTable();
        if ($.fn.DataTable.isDataTable('#PackingStatus')) {
            table.clear().destroy();
        }
        $.ajax({
            url: '/OrderStatus/PackingStatus',
            type: 'POST',
            data: JSON.stringify({ PackSWorkorder: workorder }),
            contentType: 'application/json',
            success: function (response) {
                if (response && response.length > 0) {
                    table = $('#PackingStatus').DataTable({
                        data: response,
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: null },
                            { data: 'NoOfDays' },
                            { data: 'WorkOrderNo' },
                            { data: 'ItemName' },
                            { data: 'BatchNo' },
                            { data: 'BatchSize' },
                            { data: 'OrderQuantity' },
                            { data: 'Uom' },
                            { data: 'DateOfPacking' },
                            { data: 'PackedQuantity' }
                        ],
                        "columnDefs": [
                            {
                                "targets": 1,
                                "render": function (data, type, row) {
                                    var statusColor;
                                    if (row.StatusGreen !== null) {
                                        statusColor = 'darkgreen';
                                    } else if (row.StatusYellow !== null) {
                                        statusColor = 'yellow';
                                    } else {
                                        statusColor = 'darkred';
                                    }
                                    return '<div style="background-color: ' + statusColor + '; width: 20px; height: 20px;"></div>';
                                }
                            }
                        ],
                        "paging": true,
                        "searching": true,
                        "pageLength": rowsPerPage,
                        "lengthMenu": [5, 10, 20, 25],
                    });
                }
                else {
                    table = $('#PackingStatus').DataTable({
                        data: [],
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: null },
                            { data: 'NoOfDays' },
                            { data: 'WorkOrderNo' },
                            { data: 'ItemName' },
                            { data: 'BatchNo' },
                            { data: 'BatchSize' },
                            { data: 'OrderQuantity' },
                            { data: 'Uom' },
                            { data: 'DateOfPacking' },
                            { data: 'PackedQuantity' }
                        ]
                    });
                }
            },
            error: function (error) {
                console.log("Error: " + error);
            }
        });
    }

    function Invoice() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var rowsPerPage = 5;
        var table = $('#InvoiceStatusId').DataTable();
        if ($.fn.DataTable.isDataTable('#InvoiceStatusId')) {
            table.clear().destroy();
        }
        var workorder = sessionStorage.getItem('workOrderNo');
        $.ajax({
            url: '/OrderStatus/InvoiceStatus',
            type: 'POST',
            data: JSON.stringify({ InvoiceWorkorder: workorder }),
            contentType: 'application/json',
            success: function (response) {
                if (response && response.length > 0) {
                    table = $('#InvoiceStatusId').DataTable({
                        data: response,
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: 'NoOfDays' },
                            { data: 'BillingPartyName' },
                            { data: 'NotifyParty' },
                            { data: 'DispachParty' },
                            { data: 'DispachDestination' },
                            { data: 'FinalDestination' },
                            { data: 'InvoiceNo' },
                            { data: 'ItemName' },
                            { data: 'BatchNo' },
                            { data: 'ItemPrBatch' },
                            { data: 'OrderQuantity' },
                            { data: 'DispatchQuantity' },
                            { data: 'TotalAmount' },
                            { data: 'FinalYear' },
                        ],

                        "paging": true,
                        "searching": true,
                        "pageLength": rowsPerPage,
                        "lengthMenu": [5, 10, 20, 25],

                    });
                }
                else {
                    table = $('#InvoiceStatusId').DataTable({
                        data: [],
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: 'NoOfDays' },
                            { data: 'BillingPartyName' },
                            { data: 'NotifyParty' },
                            { data: 'DispachParty' },
                            { data: 'DispachDestination' },
                            { data: 'FinalDestination' },
                            { data: 'InvoiceNo' },
                            { data: 'ItemName' },
                            { data: 'BatchNo' },
                            { data: 'ItemPrBatch' },
                            { data: 'OrderQuantity' },
                            { data: 'DispatchQuantity' },
                            { data: 'TotalAmount' },
                            { data: 'FinalYear' },
                        ]
                    });
                }
            },
            error: function (error) {
                console.log("Error: " + error);
            }
        });
    }

    function Payment() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var workorder = sessionStorage.getItem('workOrderNo');
        var rowsPerPage = 5;
        var table = $('#PaymentStatusID').DataTable();
        if ($.fn.DataTable.isDataTable('#PaymentStatusID')) {
            table.clear().destroy();
        }
        $.ajax({
            url: '/OrderStatus/PaymentStatus',
            type: 'POST',
            data: JSON.stringify({ PaymentWorkorder: workorder }),
            contentType: 'application/json',
            success: function (response) {

                if (response && response.length > 0) {
                    table = $('#PaymentStatusID').DataTable({
                        data: response,
                        columns: [
                            { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                            { data: 'NoOfDays' },
                            { data: 'WorkOrderNo' },
                            { data: 'ItemName' },
                            { data: 'BatchNo' },
                            { data: 'OrderQuantity' },
                            { data: 'UOM' },
                            { data: 'ProductionStartingDate' }
                        ],

                        "paging": true,
                        "searching": true,
                        "pageLength": rowsPerPage,
                        "lengthMenu": [5, 10, 20, 25],
                    });
                }
                else {
                    table = $('#PaymentStatusID').DataTable({
                        data: [],
                        columns: []
                    });
                }
            },
            error: function (error) {
                console.log("Error: " + error);
            }
        });
    }

    function SectionItemPartyDateWiseSearch() {
        var Username = "SampleUser";
        var PasswordHash = "SamplePasswordHash";
        var base64Credentials = btoa(Username + ":" + PasswordHash);
        var table;
        if (table && $.fn.DataTable.isDataTable('#myTable')) {
            table.destroy();
        }

        $("#submitButton").on("click", function () {
            var Dsgform = $("#ddl_SectionName").find('option:selected').text();
            var CoreGen = $("#ddl_ItemName").find('option:selected').text();
            var FromDates = $("#datewisesearch1").val();
            var ToDates = $("#datewisesearch2").val();

            $.ajax({
                url: '/OrderStatus/GetBySectionItemPartyDateWiseSearch',
                type: 'POST',
                data: JSON.stringify({
                    section: Dsgform,
                    item: CoreGen,
                    FromDate: FromDates,
                    ToDate: ToDates
                }),
                contentType: 'application/json',
                success: function (response) {
                    if (response && response.length > 0) {
                        table = $('#myTable').DataTable({
                            data: response,
                            columns: [
                                { data: null, defaultContent: '<input type="checkbox" class="row-checkbox">' },
                                { data: 'WorkOrderNo' },
                                { data: 'OrderDate' },
                                { data: 'NoOfDays' },
                                { data: 'party_name' },
                                { data: 'DrugDossageForm' },
                                { data: 'CorGenName' },
                                { data: 'ItemStatus' },
                                { data: 'ManufacturingStatus' },
                                { data: 'GroupOrder' }
                            ],
                            select: {
                                style: 'single'
                            },
                            "columnDefs": [
                                {
                                    "targets": 0,
                                    "orderable": false
                                }
                            ],
                            "paging": true,
                            "searching": true,
                            "pageLength": 5,
                            "lengthMenu": [5, 10, 20, 25]
                        });

                        $(document).on("change", "#myTable input[type='checkbox']", function () {
                            var $checkbox = $(this);
                            var $row = $checkbox.closest('tr');
                            var rowData = table.row($row).data();

                            $("#myTable input[type='checkbox']").not($checkbox).prop('checked', false);

                            if ($checkbox.prop('checked') && rowData) {
                                var workOrderNo = rowData.WorkOrderNo;
                                var corrGenName = rowData.CorrGenName;

                                sessionStorage.setItem('workOrderNo', workOrderNo);
                                sessionStorage.setItem('corrGenName', corrGenName);

                                //Designer();
                                RowMaterial();
                                PackingMaterial();
                                Production();
                                Packing();
                                //Testing();
                                Invoice();
                                Payment();
                            }
                        });
                    }
                    else {

                    }
                },
                error: function (error) {
                    console.log("Error: " + error);
                }
            });
        });
    }

    function getImagePreviews() {
        var username = 'SampleUser';
        var passwordHash = 'SamplePasswordHash';
        var base64Credentials = btoa(username + ':' + passwordHash);
        $.ajax({
            type: 'GET',
            url: 'https://192.168.5.40/testapi/Demo/GetImagesByFolder?gencode=GEN04979',
            dataType: 'json',
            headers: {
                Authorization: 'Basic ' + base64Credentials,
            },
            success: function (response) {
                console.log('Received response:', response);
                try {
                    var imagesArray = response.Images;
                    if (Array.isArray(imagesArray) && imagesArray.length > 0) {
                        var imageBase64 = imagesArray[0];
                        resizeImageAndDisplay(imageBase64);
                    } else {
                        console.error('Invalid response format. Expected an array with at least one image.');
                    }
                } catch (error) {
                    console.error('Error handling response:', error);
                }
            }

        });
    }
    function resizeImageAndDisplay(imageBase64) {
        var image = new Image();
        image.src = 'data:image/jpeg;base64,' + imageBase64;
        image.onload = function () {
            var canvas = document.createElement('canvas');
            canvas.width = 120;
            canvas.height = 128;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(image, 0, 0, 120, 150);
            var resizedImageBase64 = canvas.toDataURL('image/jpeg');
            $('<img>').attr('src', resizedImageBase64).appendTo('#imagePreview');
            $('<img>').attr('src', resizedImageBase64).appendTo('#imagePrev');
            $('<img>').attr('src', resizedImageBase64).appendTo('#imageP');
        };
    }
</script>
<style>
    tr.hover:hover {
        background-color: red;
        cursor: pointer;
    }
</style>
<div class="content-wrapper mt-10">

    <div class="row page-titles">
        <div class="col-md-12 align-self-center">
            <center>
                <h3 class="theme-cl">ORDER STATUS</h3>
            </center>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row">
            <div class="card col-md-4 col-sm-12" style="background-color: #a9b8d794;padding:4px;">
                <div class="row">
                    <div class="col-md-8 col-sm-12">
                        <div class="row margin">
                            <div class="col-md-6 col-sm-12 party" title="Find Work Order Wise">
                                <label><b>Find Group Order</b></label>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <input type="text" class="form-control form-control-sm AllSearch" id="findGroupOrder" title="Find Group Order" placeholder="Group Order Search" autocomplete="off">
                            </div>
                        </div>
                        <div class="row margin">
                            <div class="col-md-6 col-sm-12 party" title="Find Work Order Wise">
                                <label><b>Find Work Order</b></label>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <input type="text" class="form-control form-control-sm AllSearch" id="findWorkOrder" title="Find Work Order" placeholder="Work Order Search" autocomplete="off">
                            </div>
                        </div>
                        <div class="row margin">
                            <div class="col-md-6 col-sm-12 party" title="Find Batch no.">
                                <label><b>Find Batch</b></label>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <input type="text" class="form-control form-control-sm AllSearch" id="findBatchNo" title="Find Batch no" placeholder="Batch No Search" autocomplete="off">
                            </div>
                        </div>
                        <div class="row margin mb-4">
                            <div class="col-md-6 col-sm-12 party" title="Combi Code">
                                <label><b>Find Combi Code</b></label>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <input type="text" class="form-control form-control-sm AllSearch" id="combiCode" title="Find combi code" placeholder="Combi Code Search" autocomplete="off">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-12 mt-2 d-flex align-items-center justify-content-center">
                        <div class="card" style="height: 15vh; width: 12vh; background-color:white;">
                            <label class="Picture" for="dummy-img">Product Image</label>
                            <div>
                                <div id="imagePreview" class="picture-box"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card col-md-8 col-sm-12" style="background-color: #a9b8d794;z-index:60;overflow-x:hidden;">
                <div class="row">
                    <div class="col-md-2 mt-2 ">
                        <label class="party">Party Name</label>
                    </div>
                    <div class="col-md-10 col-sm-12  height-40">
                        <span id="ddl_PartyName" class="form-control partywisesearch"> </span>
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="col-md-5 col-sm-12 col-12">
                        <div class="row">
                            <div class="col-md-3 col-sm-12 mt-1">
                                <label class="section">Section</label>
                            </div>
                            <div class="col-md-9 col-sm-12">
                                <select id="ddl_SectionName" class="form-control partywisesea"> </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-7 col-sm-12 col-12">
                        <div class="row">
                            <div class="col-md-3 col-sm-12 mt-1">
                                <label class="party">Item Name</label>
                            </div>
                            <div class="col-md-7 col-sm-12 mb-2">
                                <div class="custom-drop">
                                    <div class="dropdown-containerI">
                                        <select id="ddl_ItemName" class="form-control partywisesearch item"> </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 col-sm-2 mt-4">
                        <script>"use strict";</script>
                        <div class="row">
                            <div class="col-md-5 col-sm-12 col-12">
                                <button type="button" class="btn btn-sm btnNot btn-primary" style="font-size: 12px; box-shadow: 4px 4px 6px #1e5feb66; --color: #ffffff; --background-color: #ff4081; --border-color: #ec407a;">Not To Manufactured</button>
                            </div>
                            <div class="col-md-2 col-sm-12">
                                <button type="button" class="btn btn-sm btnHold btn-primary" style="font-size: 12px; box-shadow: 4px 4px 6px #1e5feb66;">Hold</button>
                            </div>
                            <div class="col-md-2 col-sm-12">
                                <button type="button" class="btn btn-sm btn-primary" style="font-size: 12px; box-shadow: 4px 4px 6px #1e5feb66;">Cancel</button>
                            </div>
                            <div class="col-md-3 col-sm-12">
                                <button type="button" class="btn btn-sm btnClearAll btn-primary" style="font-size: 12px; box-shadow: 4px 4px 6px #1e5feb66;" onclick="clearAllInputs()">ClearAll</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-12">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="col-md-12 col-sm-12">
                                    <label class="party" for="dob">From Date</label>
                                </div>

                                <div class="col-md-12 col-sm-12">
                                    <input type="text" class="datsearch partywisesearch" id="datewisesearch1" placeholder="dd/mm/yyyy" autocomplete="off" />
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="col-md-12 col-sm-12">
                                    <label class="party" for="dob">To Date</label>
                                </div>
                                <div class="col-md-12 col-sm-12" title="Select Date">
                                    <input type="text" class="datsearch" id="datewisesearch2" placeholder="dd/mm/yyyy" autocomplete="off" />
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12 mt-4">
                                <div class="col-md-12 col-sm-12">
                                    <button id="submitButton" class="btn-flip btn btn-3d btn-primary " title="Click for Submit">
                                        <span class="text">Submit</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="card col-md-12 col-sm-12 col-12" style="background-color: #a9b8d794;">
        <div class="wrapper">
            <div class="tableContainer" style="height:23vh;">
                <table id="myTable" class="table table-bordered table-hover" style="background-color:white;">
                    <thead class="p-3 mb-2 text-black-50">
                        <tr>
                            <th>Select</th>
                            <th>Work Order No.</th>
                            <th>Order Date</th>
                            <th>No. Of Days</th>
                            <th>Party Name</th>
                            <th>Drug Dossage Form</th>
                            <th>Corr. Gen. Name</th>
                            <th>Item Status</th>
                            <th>Manufacturing Status</th>
                            <th>Group Order</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>

        <div class="box-content-colapse">
            <details class="details-comp">
                <summary id="design" class="summary-colapse">
                    Designer Status
                </summary>
                <p> @Html.Partial("_Designer") </p>
            </details>
        </div>
        <div class="box-content-colapse">
            <details class="details-comp">
                <summary id="design" class="summary-colapse">
                    RM Status
                </summary>
                <p> @Html.Partial("_RM") </p>
            </details>
        </div>
        <div class="box-content-colapse">
            <details class="details-comp">
                <summary id="design" class="summary-colapse">
                    Packing Material Status
                </summary>
                <p> @Html.Partial("_PackingMStatus") </p>
            </details>
        </div>
        <div class="box-content-colapse">
            <details class="details-comp">
                <summary id="design" class="summary-colapse">
                    Production Status
                </summary>
                <p> @Html.Partial("_Production") </p>
            </details>
        </div>
        <div class="box-content-colapse">
            <details class="details-comp">
                <summary id="design" class="summary-colapse">
                    Packing Status
                </summary>
                <p> @Html.Partial("_PackingStatus") </p>
            </details>
        </div>
        <div class="box-content-colapse">
            <details class="details-comp">
                <summary id="design" class="summary-colapse">
                    Testing Status
                </summary>
                <p> @Html.Partial("_Testing") </p>
            </details>
        </div>
        <div class="box-content-colapse">
            <details class="details-comp">
                <summary id="design" class="summary-colapse">
                    Invoice Status
                </summary>
                <p> @Html.Partial("_Invoice")</p>
            </details>
        </div>
        <div class="box-content-colapse">
            <details class="details-comp">
                <summary id="design" class="summary-colapse">
                    Payment Status
                </summary>
                <p> @Html.Partial("_Payment") </p>
            </details>
        </div>

    </div>

</div>